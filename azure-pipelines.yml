# Maven
# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

steps:
- task: Maven@3
  inputs:
    mavenPomFile: 'my-app/pom.xml'    
    goals: 'package'
    
- task: CopyFiles@2
  displayName: 'Copy Files to artifact staging directory'
  inputs:
    SourceFolder: '$(System.DefaultWorkingDirectory)'
    Contents: '**/target/*.?(war|jar)'
    TargetFolder: $(Build.ArtifactStagingDirectory)    

# Publish build artifacts
# Publish build artifacts to Azure Pipelines or a Windows file share
- task: PublishBuildArtifacts@1
  inputs:
    pathtoPublish: '$(Build.ArtifactStagingDirectory)' 
    artifactName: 'drop' 
    publishLocation: 'Container' # Options: container, filePath
    #targetPath: '$(System.DefaultWorkingDirectory)' # Required when publishLocation == FilePath
    #parallel: false # Optional
    #parallelCount: # Optional
    #fileCopyOptions: #Optional

- task: Bash@3
  inputs:
    targetType: 'inline'
    script: |
      # Write your commands here
      cd $(Build.ArtifactStagingDirectory)
      ls
      echo 'Hello world'

- task: Docker@2
  inputs:
    command: 'buildAndPush'#'build'
    repository: $(imageRepository)
    Dockerfile: '**/Dockerfile'
    containerRegistry: $(dockerRegistryServiceConnection)
      tags:|
      $(tag)
    buildContext: '$(Build.ArtifactStagingDirectory)'
        